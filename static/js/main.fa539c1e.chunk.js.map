{"version":3,"sources":["style/global-style.tsx","contexts/device-context.tsx","contexts/providers/device-context-provider.tsx","contexts/movement-context.tsx","contexts/movement-context-actions.tsx","contexts/providers/movement-context-provider.tsx","pages/three-page/components/controls.tsx","birdControls/birdControls.js","pages/three-page/components/bird-camera.tsx","contexts/history-context.tsx","pages/three-page/components/lightbulb.tsx","pages/three-page/components/cuboids.tsx","hooks/use-random.tsx","pages/three-page/components/world.tsx","pages/three-page/components/canvas-content.tsx","pages/three-page/components/three-canvas.tsx","images/arrow-white.svg","images/arrow-white-pressed.svg","pages/three-page/components/camera-control-buttons.tsx","pages/three-page/three-page.tsx","pages/skills-page/skills-page.tsx","page-switch.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","DeviceContext","React","createContext","device","DeviceContextProvider","props","getActiveDevice","useCallback","window","innerWidth","useState","setDevice","useEffect","handleResize","addEventListener","removeEventListener","Provider","value","children","MovementContext","isMovingForward","isMovingBackward","isTurningRight","isTurningLeft","MovementContextActions","setIsMovingForward","setIsMovingBackward","setIsTurningLeft","setIsTurningRight","MovementContextProvider","movementContextActions","useMemo","extend","BirdControls","object","domElement","this","movementSpeed","lookSpeed","panSpeed","moveForward","moveBackward","viewHalfX","viewHalfY","lat","lon","document","setAttribute","setMoveForward","setMoveBackward","setPanSpeed","innerHeight","offsetWidth","offsetHeight","update","targetPosition","Vector3","delta","actualMoveSpeed","autoForward","translateZ","actualLookSpeed","Math","max","min","phi","MathUtils","degToRad","theta","position","setFromSphericalCoords","add","lookAt","Controls","controlsRef","useRef","gl","useThree","movementContext","useContext","useFrame","state","current","args","ref","BirdCamera","birdRef","set","size","cameraRef","useLayoutEffect","aspect","width","height","updateProjectionMatrix","camera","rotation","color","intensity","distance","decay","castShadow","HistoryContext","history","COLORS","mesh","light","COLORS_HOVER","Lightbulb","textCanvasWidth","setTextCanvasWidth","textCanvasHeight","setTextCanvasHeight","textRefNode","setTextRefNode","colors","setColors","lightRef","lowLightRef","groupRef","lightPositionY","isFontLoaded","setIsFontLoaded","isClicked","setIsClicked","fonts","ready","then","textRef","node","lowLightPosition","lightPosition","copy","textScale","textPosition","boundingBox","Box3","setFromObject","textLength","y","texture","ctx","createElement","getContext","Error","font","measureText","text","borderSize","canvas","textBaseline","fillStyle","fillText","CanvasTexture","minFilter","LinearFilter","scale","onPointerOver","body","style","cursor","onClick","setTimeout","push","path","onPointerOut","emissive","Color","emissiveIntensity","PI","map","side","DoubleSide","transparent","Cuboids","random","sequenceSeed","seed","sinusRandom","x","sin","floor","round","useRandomGenerator","instancedMeshRef","gluedIndexes","Array","numCuboids","item","index","isListFinished","setIsListFinished","lift","setInterval","shift","transform","Matrix4","i","worldSize","z","abs","makeScale","setPosition","setMatrixAt","deltaX","currentGluedIndexes","minY","undefined","indexOf","matrix","getMatrixAt","setFromMatrixPosition","length","instanceMatrix","needsUpdate","receiveShadow","attach","World","isLightbulbClicked","setIsLightbulbClicked","lightbulbPositions","flatShading","CanvasContent","shadowMap","enabled","type","PCFSoftShadowMap","setPixelRatio","devicePixelRatio","StyledCanvas","styled","Canvas","ThreeCanvas","useHistory","ButtonSize","ButtonMixin","isActive","css","arrowWhite","arrowWhitePressed","StyledButtonUp","div","StyledButtonLeft","StyledButtonRight","StyledButtonDown","StyledRoot","StyledGrid","StyledText","CameraControlButtons","onKeyDown","event","code","onKeyUp","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","motion","StyledFontWorkaround","ThreePage","isFirstRender","setIsFirstRender","initial","opacity","exit","transition","duration","SkillsPage","to","PageSwitch","location","useLocation","AnimatePresence","exitBeforeEnter","exact","pathname","App","basename","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa539c1e.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    html,\n    body,\n    #root {\n      margin: 0;\n      padding: 0;\n    }\n\n    html {\n      box-sizing: border-box;\n    }\n    *, *:before, *:after {\n      box-sizing: inherit;\n    }\n`;\n\nexport default GlobalStyle","import React from \"react\";\n\nexport type Device = \"small\" | \"large\"\n\nexport interface DeviceContextType {\n    device: Device;\n}\n\nexport const DeviceContext = React.createContext<DeviceContextType>({\n    device: \"large\",\n});\n\nexport default DeviceContext;\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport DeviceContext, {Device} from \"../device-context\";\n\nexport interface DeviceContextProviderProps {\n    children: React.ReactNode;\n}\n\nexport default function DeviceContextProvider(props: DeviceContextProviderProps) {\n    const getActiveDevice = useCallback(() => {\n        if (window.innerWidth > 768) {\n            return \"large\";\n        }\n        return \"small\";\n    }, []);\n\n    const [device, setDevice] = useState<Device>(getActiveDevice());\n\n    useEffect(() => {\n        function handleResize() {\n            setDevice(getActiveDevice());\n        }\n        window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, [getActiveDevice]);\n\n    return (\n        <DeviceContext.Provider value={{device}}>\n            {props.children}\n        </DeviceContext.Provider>\n    );\n}","import React from 'react';\n\nexport interface MovementContextType {\n    isMovingForward: boolean;\n    isMovingBackward: boolean;\n    isTurningRight: boolean;\n    isTurningLeft: boolean;\n}\n\nexport const MovementContext = React.createContext<MovementContextType>({\n    isMovingForward: false,\n    isMovingBackward: false,\n    isTurningRight: false,\n    isTurningLeft: false,\n});\n\nexport default MovementContext;\n","import React from 'react';\n\nexport interface MovementContextActionsType {\n    setIsMovingForward: (isMovingForward: boolean) => void;\n    setIsMovingBackward: (isMovingBackward: boolean) => void;\n    setIsTurningLeft: (isTurningLeft: boolean) => void;\n    setIsTurningRight: (isTurningRight: boolean) => void;\n}\n\nexport const MovementContextActions = React.createContext<MovementContextActionsType>({\n    setIsMovingForward: () => undefined,\n    setIsMovingBackward: () => undefined,\n    setIsTurningLeft: () => undefined,\n    setIsTurningRight: () => undefined,\n});\n\nexport default MovementContextActions;\n","import {ReactNode, useMemo, useState} from \"react\";\nimport MovementContext from \"../movement-context\";\nimport MovementContextActions, {MovementContextActionsType} from \"../movement-context-actions\";\n\nexport interface MovementContextProviderProps {\n    children: ReactNode;\n}\n\nexport default function MovementContextProvider(props:MovementContextProviderProps) {\n    const [isMovingForward, setIsMovingForward] = useState(false);\n    const [isMovingBackward, setIsMovingBackward] = useState(false);\n    const [isTurningLeft, setIsTurningLeft] = useState(false);\n    const [isTurningRight, setIsTurningRight] = useState(false);\n\n    const movementContextActions: MovementContextActionsType = useMemo(() => {\n       return {\n           setIsMovingForward,\n           setIsMovingBackward,\n           setIsTurningLeft,\n           setIsTurningRight,\n       }\n    }, []);\n\n    return (\n        <MovementContext.Provider value={{isMovingForward, isMovingBackward, isTurningLeft, isTurningRight}}>\n            <MovementContextActions.Provider value={movementContextActions}>\n                {props.children}\n            </MovementContextActions.Provider>\n        </MovementContext.Provider>\n    )\n}","import React, {MutableRefObject, useContext, useEffect, useRef} from 'react'\nimport {extend, useFrame, useThree} from \"@react-three/fiber\";\nimport {BirdControls} from \"../../../birdControls/birdControls\";\nimport {Object3D} from \"three/src/core/Object3D\";\nimport {BirdControlsType} from \"../../../birdControls/birdControlsType\";\nimport MovementContext from \"../../../contexts/movement-context\";\n\nextend({ BirdControls });\n\nexport interface ControlsProps {\n    object: MutableRefObject<Object3D | null>;\n}\n\nfunction Controls(props: ControlsProps) {\n    const controlsRef = useRef<BirdControlsType>(null);\n    const { gl } = useThree();\n    const movementContext = useContext(MovementContext);\n\n    useFrame((state, delta) => {\n        if (!controlsRef || !controlsRef.current) {\n            return;\n        }\n\n        controlsRef.current.update(delta);\n    });\n\n    useEffect(() => {\n        if (!controlsRef || !controlsRef.current) {\n            return;\n        }\n\n        controlsRef.current.setMoveForward(movementContext.isMovingForward)\n    }, [movementContext.isMovingForward]);\n\n    useEffect(() => {\n        if (!controlsRef || !controlsRef.current) {\n            return;\n        }\n\n        controlsRef.current.setMoveBackward(movementContext.isMovingBackward)\n    }, [movementContext.isMovingBackward]);\n\n    useEffect(() => {\n        if (!controlsRef || !controlsRef.current) {\n            return;\n        }\n\n        movementContext.isTurningRight ? controlsRef.current.setPanSpeed(500) : controlsRef.current.setPanSpeed(0)\n    }, [movementContext.isTurningRight]);\n\n    useEffect(() => {\n        if (!controlsRef || !controlsRef.current) {\n            return;\n        }\n\n        movementContext.isTurningLeft ? controlsRef.current.setPanSpeed(-500) : controlsRef.current.setPanSpeed(0)\n    }, [movementContext.isTurningLeft]);\n\n    if (!props.object || !props.object.current) {\n        return <></>\n    }\n\n    return (\n        <birdControls\n            args={[props.object.current, gl.domElement]}\n            ref={controlsRef}\n            movementSpeed={500}\n            lookSpeed={0.1}\n        />\n    )\n}\n\nexport default Controls\n","import {\n    MathUtils,\n    Vector3\n} from 'three';\n\n// based on https://github.com/mrdoob/three.js/blob/dev/examples/jsm/controls/FirstPersonControls.js\n\nconst BirdControls = function (object, domElement ) {\n    // set by constructor (property 'arg')\n    this.object = object;\n    this.domElement = domElement;\n\n    // set by property\n    this.movementSpeed = 1.0;\n    this.lookSpeed = 0.005;\n\n    // internals\n    this.panSpeed = 0;\n\n    this.moveForward = false;\n    this.moveBackward = false;\n\n    this.viewHalfX = 0;\n    this.viewHalfY = 0;\n\n    var lat = 0;\n    var lon = 0;\n\n    if ( this.domElement !== document ) {\n        this.domElement.setAttribute( 'tabindex', - 1 );\n    }\n\n    this.setMoveForward = function(isMovingForward) {\n        this.moveForward = isMovingForward;\n    }\n\n    this.setMoveBackward = function(isMovingBackward) {\n        this.moveBackward = isMovingBackward;\n    }\n\n    this.setPanSpeed = function(panSpeed) {\n        this.panSpeed = panSpeed;\n    }\n\n\n    this.handleResize = function () {\n        if ( this.domElement === document ) {\n            this.viewHalfX = window.innerWidth / 2;\n            this.viewHalfY = window.innerHeight / 2;\n        } else {\n            this.viewHalfX = this.domElement.offsetWidth / 2;\n            this.viewHalfY = this.domElement.offsetHeight / 2;\n        }\n    };\n\n    this.update = function () {\n\n        var targetPosition = new Vector3();\n\n        return function update( delta ) {\n            var actualMoveSpeed = delta * this.movementSpeed;\n\n            if ( this.moveForward || ( this.autoForward && ! this.moveBackward ) ) {\n                this.object.translateZ( - ( actualMoveSpeed  ) );\n            }\n            if ( this.moveBackward ) this.object.translateZ( actualMoveSpeed );\n\n            var actualLookSpeed = delta * this.lookSpeed;\n\n            lon -= this.panSpeed * actualLookSpeed;\n            lat = Math.max( - 85, Math.min( 85, lat ) );\n            var phi = MathUtils.degToRad( 90 - lat );\n            var theta = MathUtils.degToRad( lon );\n            var position = this.object.position;\n            targetPosition.setFromSphericalCoords( 1, phi, theta ).add( position );\n\n            this.object.lookAt( targetPosition );\n        };\n    }();\n    //\n    // this.dispose = function () {\n    // };\n\n    // function bind( scope, fn ) {\n    //     return function () {\n    //         fn.apply( scope, arguments );\n    //     };\n    // }\n\n    this.handleResize();\n};\n\nexport { BirdControls };","import React, {useLayoutEffect, useRef} from \"react\";\nimport {useThree, Vector3} from \"@react-three/fiber\";\nimport Controls from \"./controls\";\nimport {Group, PerspectiveCamera} from \"three\";\n\nexport interface CameraProps {\n    position: Vector3;\n}\n\nexport default function BirdCamera(props: CameraProps) {\n    const birdRef= useRef<Group>(null);\n    const set = useThree(state => state.set);\n    const size = useThree(state => state.size);\n    const cameraRef = useRef<PerspectiveCamera>(null);\n\n    useLayoutEffect(() => {\n        if (cameraRef.current) {\n            cameraRef.current.aspect = size.width / size.height\n            cameraRef.current.updateProjectionMatrix()\n        }\n    }, [size]);\n\n    useLayoutEffect(() => {\n        if (!cameraRef.current) {\n            return;\n        }\n        set({ camera: cameraRef.current });\n    }, [set, size.height, size.width])\n\n    return (\n        <>\n            <group ref={birdRef} position={props.position}>\n                <group rotation={[-0.3,0, 0]}>\n                    <perspectiveCamera ref={cameraRef}  />\n                </group>\n\n                <pointLight\n                    color={\"white\"}\n                    intensity={1}\n                    distance={300}\n                    decay={2}\n                    castShadow={false}\n                    position={[0,0,0]}\n                />\n            </group>\n\n\n            <Controls object={birdRef}/>\n        </>\n    )\n\n}","import React from \"react\";\nimport * as H from 'history';\n\nexport interface HistoryContextType {\n    history: H.History;\n}\n\nexport const HistoryContext = React.createContext<HistoryContextType>({\n    history: {} as H.History,\n});\n","import React, {useCallback, useContext, useEffect, useMemo, useRef, useState} from \"react\";\nimport {\n    Box3, CanvasTexture,\n    Color,\n    DoubleSide, Group, LinearFilter, Mesh, PointLight,\n} from \"three\";\nimport {Vector3} from \"three/src/math/Vector3\";\nimport { useHistory } from \"react-router-dom\";\nimport {HistoryContext} from \"../../../contexts/history-context\";\n\n\nconst LOW_LIGHT_OFFSET = 30;\n\nconst COLORS = {\n    mesh: \"#ffffff\",\n    light: \"#ffffff\"\n}\nconst COLORS_HOVER = {\n    mesh: \"#FF0500\",\n    light: \"#FF0000\",\n}\n\nexport interface IlluminatedMeshProps {\n    position: Vector3;\n    text: string;\n    height: number;\n    onClick: () => void;\n    path: string;\n}\n\nexport default function Lightbulb(props: IlluminatedMeshProps) {\n    const [textCanvasWidth, setTextCanvasWidth] = useState(0);\n    const [textCanvasHeight, setTextCanvasHeight] = useState(0);\n    const [textRefNode, setTextRefNode] = useState<Mesh>();\n    const [colors, setColors] = useState(COLORS);\n    const lightRef = useRef<PointLight>(null);\n    const lowLightRef = useRef<PointLight>(null);\n    const groupRef = useRef<Group>(null);\n    const lightPositionY = props.height * 0.8;\n    const [isFontLoaded, setIsFontLoaded] = useState(false);\n    const [isClicked, setIsClicked] = useState(false);\n    const history = useContext(HistoryContext).history;\n\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        document.fonts.ready.then(function () {\n            setIsFontLoaded(true);\n        });\n    }, []);\n\n    const textRef = useCallback(node => {\n        if (node === null) {\n            return;\n        }\n\n        setTextRefNode(node);\n    }, []);\n\n    const lowLightPosition = useMemo(() => {\n        const lightPosition = new Vector3();\n        lightPosition.copy(props.position);\n        lightPosition.add(new Vector3(0, LOW_LIGHT_OFFSET, 0));\n\n        return lightPosition;\n    }, [props.position]);\n\n    const textScale: Vector3 = useMemo(() => {\n        const labelBaseScale = 0.15;\n        return new Vector3(\n            textCanvasWidth * labelBaseScale,\n            textCanvasHeight * labelBaseScale,\n            0\n        );\n    }, [textCanvasHeight, textCanvasWidth])\n\n    const textPosition = useMemo(() => {\n        if (!textRefNode) {\n            return;\n        }\n\n        const boundingBox: Box3 = new Box3().setFromObject(textRefNode);\n        const textLength = boundingBox.max.y - boundingBox.min.y;\n\n        // const normalizationFactor = 0.5;\n        const padding = 5;\n        return new Vector3(0, -textLength / 2 + (props.height) - padding, 11);\n    }, [props.height, textRefNode]);\n\n    const texture = useMemo(() => {\n        if (!isFontLoaded) {\n            return;\n        }\n\n        const size = 100;\n\n        const borderSize = 2;\n        const ctx = document.createElement('canvas').getContext('2d');\n\n        if (!ctx) {\n            throw new Error(`Could not create ctx`);\n        }\n\n        const font = `${size}px AuvantGothicBold, monospace`;\n        ctx.font = font;\n        // measure how long the name will be\n        const doubleBorderSize = borderSize * 2;\n        const width = ctx.measureText(props.text).width + doubleBorderSize;\n        const height = size + doubleBorderSize;\n        ctx.canvas.width = width;\n        ctx.canvas.height = height;\n\n        // need to set font again after resizing canvas\n        ctx.font = font;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = 'black';\n        ctx.fillText(props.text, borderSize, borderSize);\n\n        setTextCanvasWidth(ctx.canvas.width);\n        setTextCanvasHeight(ctx.canvas.height);\n\n        const texture = new CanvasTexture(ctx.canvas);\n\n        // In combination with gl.setPixelRatio(window.devicePixelRatio) <- see canvas-content.tsx\n        // this makes the text sharper.\n        texture.minFilter = LinearFilter;\n\n        return texture\n    }, [props.text, isFontLoaded]);\n\n\n    function onPointerOver() {\n        setColors(COLORS_HOVER);\n        document.body.style.cursor = \"pointer\";\n    }\n\n    function onPointerOut() {\n        document.body.style.cursor = \"\";\n        if (isClicked) {\n            return;\n        }\n        setColors(COLORS);\n    }\n\n    function onClick() {\n        setColors(COLORS_HOVER);\n        setIsClicked(isClicked => !isClicked);\n        props.onClick();\n        setTimeout(() => {\n            history.push(props.path);\n        }, 1000);\n    }\n\n    return (\n        <>\n            <pointLight\n                ref={lowLightRef}\n                color={colors.light}\n                intensity={20}\n                distance={60}\n                decay={4}\n                position={lowLightPosition}\n                castShadow={true}\n            >\n                <pointLight\n                    ref={lightRef}\n                    color={colors.light}\n                    intensity={1.2}\n                    distance={350}\n                    decay={3}\n                    position={[0, lightPositionY - LOW_LIGHT_OFFSET, 0]}\n                    castShadow={true}\n                >\n                    <group\n                        ref={groupRef}\n                        position={[0, -lightPositionY - 10, 0]}\n                    >\n                        <mesh\n                            scale={[20, props.height, 20]}\n                            position={[0, props.height / 2, 0]}\n                            onPointerOver={onPointerOver}\n                            onClick={onClick}\n                            onPointerOut={onPointerOut}\n                        >\n                            <meshStandardMaterial\n                                emissive={new Color(colors.mesh)}\n                                emissiveIntensity={1}\n                                color={\"#000000\"}\n                            />\n\n                            <boxBufferGeometry\n                                args={[1, 1, 1]}/>\n                        </mesh>\n\n                        {texture &&\n                            <mesh\n                                position={textPosition}\n                                ref={textRef}\n                                scale={textScale}\n                                rotation={[0, 0, -Math.PI / 2]}\n                            >\n                                <meshBasicMaterial\n                                    map={texture}\n                                    side={DoubleSide}\n                                    transparent={true}\n                                />\n                                <planeGeometry\n                                    args={[1, 1]}\n                                />\n                            </mesh>\n                        }\n                    </group>\n\n                </pointLight>\n            </pointLight>\n        </>\n    );\n}","import React, {useEffect, useLayoutEffect, useRef, useState} from \"react\";\nimport {BufferGeometry, InstancedMesh, Matrix4, MeshStandardMaterial} from \"three\";\nimport useRandomGenerator from \"../../../hooks/use-random\";\nimport {useFrame} from \"@react-three/fiber\";\nimport {Vector3} from \"three/src/math/Vector3\";\n\nexport interface CuboidsProps {\n    numCuboids: number;\n    worldSize: number;\n    lift: boolean;\n}\n\nconst LIFT_SPEED = 200;\nconst DELAY_MS = 20;\n\nexport default function Cuboids(props: CuboidsProps) {\n    const random = useRandomGenerator(4);\n    const instancedMeshRef = useRef<InstancedMesh>(null);\n    const gluedIndexes = useRef([...Array(props.numCuboids - 1)].map((item, index) => index));\n    const [isListFinished, setIsListFinished] = useState(false);\n\n    useEffect(() => {\n        if (!props.lift) {\n            return;\n        }\n\n        setInterval(() => {\n            gluedIndexes.current.shift();\n        }, DELAY_MS)\n\n    }, [props.lift])\n\n    useLayoutEffect(() => {\n        if (!instancedMeshRef.current) {\n            return;\n        }\n\n        const transform = new Matrix4();\n        for (let i = 0; i < props.numCuboids; i++) {\n\n            let height = random() * 160 + 100;\n\n            const x = random() * props.worldSize - props.worldSize / 2;\n            const y = 0;\n            const z = random() * props.worldSize - props.worldSize / 2;\n\n            if (Math.abs(x) <= 150 && z > -50) {\n                height = height * 0.8;\n            }\n\n            transform.makeScale(1, height, 1)\n            transform.setPosition(x, y, z);\n            instancedMeshRef.current.setMatrixAt(i, transform)\n        }\n    }, [props.numCuboids, props.worldSize, random]);\n\n    useFrame((state, delta)  => {\n        if (!props.lift || !instancedMeshRef.current || isListFinished) {\n            return;\n        }\n\n        const deltaX = delta * LIFT_SPEED;\n        const currentGluedIndexes = [...gluedIndexes.current];\n        let minY = undefined;\n\n        for (let i = 0; i < props.numCuboids; i++) {\n            if (currentGluedIndexes.indexOf(i) !== -1) {\n                minY = 0;\n                continue;\n            }\n\n            const matrix = new Matrix4();\n            instancedMeshRef.current.getMatrixAt(i, matrix);\n            const position = new Vector3().setFromMatrixPosition(matrix);\n            position.add(new Vector3(0,deltaX,0));\n\n            if ((typeof minY === \"undefined\") || position.y < minY) {\n                minY = position.y;\n            }\n\n            matrix.setPosition(position);\n            instancedMeshRef.current.setMatrixAt(i, matrix);\n        }\n\n        if (currentGluedIndexes.length === 0 && !!minY && minY > 2000) {\n            setIsListFinished(true);\n        }\n\n        instancedMeshRef.current.instanceMatrix.needsUpdate = true;\n    })\n\n    return (\n            <instancedMesh\n                args={[null as unknown as BufferGeometry, null as unknown as MeshStandardMaterial, props.numCuboids]}\n                ref={instancedMeshRef}\n                castShadow={true}\n                receiveShadow={true}\n            >\n                <meshStandardMaterial\n                    attach=\"material\"\n                    color=\"white\"\n                />\n                <boxBufferGeometry\n                    attach=\"geometry\"\n                    args={[20, 1, 20]} /*ref={ref => ref && ref.translate(0, 0.5, 0)}*/ />\n            </instancedMesh>\n    );\n}","import {useCallback, useRef} from \"react\";\n\nexport default function useRandomGenerator(sequenceSeed: number) {\n    const seed = useRef(sequenceSeed);\n\n    return useCallback((min = 0, max = 0.999) => {\n        function sinusRandom() {\n            const x = Math.sin(seed.current) * 10000;\n            seed.current ++;\n            return x - Math.floor(x);\n        }\n\n        const random = sinusRandom();\n        return Math.round((random * (max - min) + min) * 100) / 100\n    }, [seed]);\n}\n","import React, {useMemo, useState} from \"react\";\nimport Lightbulb from \"./lightbulb\";\nimport {Vector3} from \"three/src/math/Vector3\";\nimport Cuboids from \"./cuboids\";\n\nexport interface WorldProps {\n    numCuboids: number;\n    size: number;\n}\n\nexport default function World(props: WorldProps) {\n    const [isLightbulbClicked, setIsLightbulbClicked] = useState(false);\n\n    const lightbulbPositions = useMemo(() => {\n        return [\n            new Vector3(0, 0, 100),\n            new Vector3(115, 0, -105),\n            new Vector3(-100, 0, 35)\n        ]\n    }, []);\n\n\n\n    return (\n        <>\n            {/*<fog attach=\"fog\" args={['#53FAEB', 0.002, 1000]} />*/}\n            {/*<directionalLight position={[100, 100, 100]} color=\"ddred\" castShadow={true}/>*/}\n            {/*<directionalLight position={[-1, -1, -1]} color=\"#ffdw738\" castShadow={true} />*/}\n            <ambientLight color=\"white\" intensity={0.001}/>\n            {/*<ambientLight color=\"white\" intensity={0.1}/>*/}\n\n            <Cuboids numCuboids={props.numCuboids} worldSize={props.size} lift={isLightbulbClicked}/>\n\n            <Lightbulb\n                onClick={() => setIsLightbulbClicked(true)}\n                position={lightbulbPositions[2]}\n                text={\"THIRD\"}\n                height={175}\n                path={\"skills\"}\n            />\n            <Lightbulb\n                onClick={() => setIsLightbulbClicked(true)}\n                position={lightbulbPositions[0]}\n                text={\"FIRST\"}\n                height={160}\n                path={\"skills\"}\n            />\n            <Lightbulb\n                onClick={() => setIsLightbulbClicked(true)}\n                position={lightbulbPositions[1]}\n                text={\"SECOND\"}\n                height={185}\n                path={\"skills\"}\n            />\n\n            <mesh position={[0, 0, 0]} rotation={[-Math.PI / 2, 0, 0]} receiveShadow={true}>\n                <planeBufferGeometry\n                    attach=\"geometry\"\n                    args={[props.size, props.size]}\n                />\n                <meshStandardMaterial\n                    attach=\"material\"\n                    color=\"white\"\n                    flatShading={true}\n                />\n            </mesh>\n        </>\n    );\n}","import React, {useEffect} from \"react\";\nimport BirdCamera from \"./bird-camera\";\nimport World from \"./world\";\nimport {PCFSoftShadowMap} from \"three\";\nimport {useThree} from \"@react-three/fiber\";\n\nexport default function CanvasContent() {\n    const {gl} = useThree();\n\n    useEffect(() => {\n        gl.shadowMap.enabled = true;\n        gl.shadowMap.type = PCFSoftShadowMap;\n\n        gl.setPixelRatio(window.devicePixelRatio)\n    }, [gl]);\n\n    return (\n        <>\n            <BirdCamera position={[0, 200, 700]}/>\n\n            <World\n                numCuboids={170}\n                size={1000}\n            />\n        </>\n    );\n}","import React, {useContext} from \"react\";\nimport {Canvas} from \"@react-three/fiber\";\nimport MovementContext from \"../../../contexts/movement-context\";\nimport CanvasContent from \"./canvas-content\";\nimport styled from \"styled-components\";\nimport {useHistory} from \"react-router-dom\";\nimport {HistoryContext} from \"../../../contexts/history-context\";\n\nconst StyledCanvas = styled(Canvas)`\n    canvas:focus {\n        outline: none;\n    }\n`\n\nexport default function ThreeCanvas() {\n    const movementContext = useContext(MovementContext);\n    const history = useHistory();\n\n    // Apparently, Context gets lost if <Canvas> is lost, so we re-provide the value within canvas.\n\n    return (\n        <StyledCanvas>\n            <MovementContext.Provider value={movementContext}>\n                <HistoryContext.Provider value={{history}}>\n                    <CanvasContent/>\n                </HistoryContext.Provider>\n            </MovementContext.Provider>\n        </StyledCanvas>\n    );\n}","export default __webpack_public_path__ + \"static/media/arrow-white.fb6e3d97.svg\";","export default __webpack_public_path__ + \"static/media/arrow-white-pressed.acc87111.svg\";","import React, {useContext, useEffect} from \"react\";\nimport MovementContextActions from \"../../../contexts/movement-context-actions\";\nimport styled, {css} from \"styled-components\";\n\nimport arrowWhite from '../../../images/arrow-white.svg';\nimport arrowWhitePressed from '../../../images/arrow-white-pressed.svg';\nimport MovementContext from \"../../../contexts/movement-context\";\n\nconst ButtonSize = \"50px\";\n\nconst ButtonMixin = (isActive: boolean) => css`\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    cursor: pointer;\n\n    background-image: url(${arrowWhite});\n    ${isActive && css`\n        background-image: url(${arrowWhitePressed});\n    `}\n\n`\n\nconst StyledButtonUp = styled.div<{ isActive: boolean }>`\n    grid-row: 1;\n    grid-column: 2;\n    ${props => ButtonMixin(props.isActive)};\n\n`\n\nconst StyledButtonLeft = styled.div<{ isActive: boolean }>`\n    grid-row: 2;\n    grid-column: 1;\n    transform: rotate(-90deg);\n    ${props => ButtonMixin(props.isActive)};\n`\n\nconst StyledButtonRight = styled.div<{ isActive: boolean }>`\n    grid-row: 2;\n    grid-column: 3;\n    transform: rotate(90deg);\n    ${props => ButtonMixin(props.isActive)};\n`\n\nconst StyledButtonDown = styled.div<{ isActive: boolean }>`\n    grid-row: 3;\n    grid-column: 2;\n    transform: rotate(180deg);\n    ${props => ButtonMixin(props.isActive)};\n`\n\nconst StyledRoot = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    flex-direction: column;\n\n    bottom: 0;\n    padding-bottom: calc(${ButtonSize} / 2);\n    padding-right: calc(${ButtonSize} / 2);\n    align-items: flex-end;\n\n\n    @media (min-width: 768px) {\n        align-items: center;\n        bottom: 8%;\n        right: unset;\n        padding-right: 0;\n        padding-bottom: 0;\n    }\n`\n\nconst StyledGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, ${ButtonSize});\n    grid-template-rows: repeat(3, ${ButtonSize});\n    user-select: none;\n`\n\nconst StyledText = styled.div`\n    margin-top: 20px;\n    color: white;\n    font-family: \"SourceCodePro\", monospace;\n    display: none;\n    text-align: center;\n\n    @media (min-width: 768px) {\n        display: block;\n    }\n`\n\nexport default function CameraControlButtons() {\n    const movementContextActions = useContext(MovementContextActions);\n    const movementContext = useContext(MovementContext);\n\n    useEffect(() => {\n        function onKeyDown(event: KeyboardEvent) {\n            switch (event.code) {\n                case 'ArrowUp':\n                case 'KeyW':\n                    movementContextActions.setIsMovingForward(true);\n                    break;\n\n                case 'ArrowLeft':\n                case 'KeyA':\n                    movementContextActions.setIsTurningLeft(true);\n                    break;\n\n                case 'ArrowDown':\n                case 'KeyS':\n                    movementContextActions.setIsMovingBackward(true);\n                    break;\n\n                case 'ArrowRight':\n                case 'KeyD':\n                    movementContextActions.setIsTurningRight(true);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        function onKeyUp(event: KeyboardEvent) {\n            switch (event.code) {\n                case 'ArrowUp':\n                case 'KeyW':\n                    movementContextActions.setIsMovingForward(false);\n                    break;\n\n                case 'ArrowLeft':\n                case 'KeyA':\n                    movementContextActions.setIsTurningLeft(false);\n                    break;\n\n                case 'ArrowDown':\n                case 'KeyS':\n                    movementContextActions.setIsMovingBackward(false);\n                    break;\n\n                case 'ArrowRight':\n                case 'KeyD':\n                    movementContextActions.setIsTurningRight(false);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        window.addEventListener('keydown', onKeyDown);\n        window.addEventListener('keyup', onKeyUp);\n\n        return () => {\n            window.removeEventListener('keydown', onKeyDown);\n            window.addEventListener('keyup', onKeyUp);\n        }\n    }, [movementContextActions])\n\n    return (\n        <StyledRoot>\n            <StyledGrid>\n                <StyledButtonUp\n                    isActive={movementContext.isMovingForward}\n                    onMouseDown={() => movementContextActions.setIsMovingForward(true)}\n                    onTouchStart={() => movementContextActions.setIsMovingForward(true)}\n                    onMouseUp={() => movementContextActions.setIsMovingForward(false)}\n                    onTouchEnd={() => movementContextActions.setIsMovingForward(false)}\n                />\n\n                <StyledButtonDown\n                    isActive={movementContext.isMovingBackward}\n                    onMouseDown={() => movementContextActions.setIsMovingBackward(true)}\n                    onTouchStart={() => movementContextActions.setIsMovingBackward(true)}\n                    onMouseUp={() => movementContextActions.setIsMovingBackward(false)}\n                    onTouchEnd={() => movementContextActions.setIsMovingBackward(false)}\n                />\n\n                <StyledButtonLeft\n                    isActive={movementContext.isTurningLeft}\n                    onMouseDown={() => movementContextActions.setIsTurningLeft(true)}\n                    onTouchStart={() => movementContextActions.setIsTurningLeft(true)}\n                    onMouseUp={() => movementContextActions.setIsTurningLeft(false)}\n                    onTouchEnd={() => movementContextActions.setIsTurningLeft(false)}\n                />\n\n                <StyledButtonRight\n                    isActive={movementContext.isTurningRight}\n                    onMouseDown={() => movementContextActions.setIsTurningRight(true)}\n                    onTouchStart={() => movementContextActions.setIsTurningRight(true)}\n                    onMouseUp={() => movementContextActions.setIsTurningRight(false)}\n                    onTouchEnd={() => movementContextActions.setIsTurningRight(false)}\n                />\n            </StyledGrid>\n\n\n            <StyledText>\n                Click the arrows to navigate <br/>\n                {\"Or use W, A, S, D on your keyboard\"}\n            </StyledText>\n        </StyledRoot>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {motion} from \"framer-motion\";\nimport MovementContextProvider from \"../../contexts/providers/movement-context-provider\";\nimport ThreeCanvas from \"./components/three-canvas\";\nimport CameraControlButtons from \"./components/camera-control-buttons\";\n\n\nconst StyledRoot = styled(motion.div)`\n    background-color: black;\n    height: 100vh;\n`\n\n// Workaround to make the font available as a texture in lightbulb.tsx\nconst StyledFontWorkaround = styled.div`\n    font-family: \"AuvantGothicBold\", sans-serif;\n    position: absolute;\n    z-index: -99;\n`\n\nexport default function ThreePage() {\n    const [isFirstRender, setIsFirstRender] = useState(true);\n\n    useEffect(() => {\n        setIsFirstRender(false);\n    }, []);\n\n    return (\n            <StyledRoot\n                initial={{opacity: 1}}\n                exit={{opacity: 0}}\n                transition={{duration: 1.5}}\n            >\n                <MovementContextProvider>\n\n                    {isFirstRender &&\n                        <StyledFontWorkaround>TEXT</StyledFontWorkaround>\n                    }\n\n                    <ThreeCanvas/>\n                    <CameraControlButtons/>\n                </MovementContextProvider>\n\n            </StyledRoot>\n    );\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default function SkillsPage() {\n    return (\n        <>\n            <h1>Other Page</h1>\n            <Link to=\"/\">Back to home</Link>\n        </>\n    );\n}","import React from \"react\";\nimport {AnimatePresence} from \"framer-motion\";\nimport {Route, Switch, useLocation} from \"react-router-dom\";\nimport ThreePage from \"./pages/three-page/three-page\";\nimport SkillsPage from \"./pages/skills-page/skills-page\";\n\nexport default function PageSwitch() {\n    const location = useLocation();\n\n    return (\n        <AnimatePresence exitBeforeEnter>\n            <Switch\n                location={location}\n                key={location.pathname}\n            >\n                <Route\n                    exact\n                    path={[\"/\", `/home`]}\n                >\n                    <ThreePage/>\n                </Route>\n\n                <Route\n                    exact\n                    path={[\"/skills\"]}\n                >\n                    <SkillsPage/>\n                </Route>\n            </Switch>\n        </AnimatePresence>\n    );\n}","import React from 'react'\nimport GlobalStyle from \"./style/global-style\";\n\nimport DeviceContextProvider from \"./contexts/providers/device-context-provider\";\nimport \"./style/font-faces.css\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport PageSwitch from \"./page-switch\";\n\nfunction App() {\n\n    return (\n        <>\n            <GlobalStyle/>\n            <DeviceContextProvider>\n\n                <BrowserRouter basename={\"exp\"}>\n                    <PageSwitch/>\n                </BrowserRouter>\n\n            </DeviceContextProvider>\n        </>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {ReactThreeFiber} from \"@react-three/fiber\";\nimport {MapControls, OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\nimport {FirstPersonControls} from \"three/examples/jsm/controls/FirstPersonControls\";\nimport {FlyControls} from \"three/examples/jsm/controls/FlyControls\";\nimport {BirdControlsType} from \"./birdControls/birdControlsType\";\n\ndeclare global {\n    namespace JSX {\n        interface IntrinsicElements {\n            mapControls: ReactThreeFiber.Object3DNode<MapControls, typeof MapControls>,\n            firstPersonControls: ReactThreeFiber.Object3DNode<FirstPersonControls, typeof FirstPersonControls>,\n            flyControls: ReactThreeFiber.Object3DNode<FlyControls, typeof FlyControls>,\n            orbitControls: ReactThreeFiber.Object3DNode<OrbitControls, typeof OrbitControls>,\n            birdControls: ReactThreeFiber.Object3DNode<BirdControlsType, typeof BirdControlsType>,\n        }\n    }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}