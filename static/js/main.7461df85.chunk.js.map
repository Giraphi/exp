{"version":3,"sources":["contexts/movement-context.tsx","components/controls.tsx","birdControls/birdControls.js","components/bird-camera.tsx","components/lightbulb.tsx","components/world.tsx","components/canvas-content.tsx","components/three-canvas.tsx","global-style.tsx","contexts/movement-context-actions.tsx","contexts/providers/movement-context-provider.tsx","images/arrow-white.svg","images/arrow-white-pressed.svg","components/camera-control-elements.tsx","App.tsx","index.tsx"],"names":["MovementContext","React","createContext","isMovingForward","isMovingBackward","isTurningRight","isTurningLeft","extend","BirdControls","object","domElement","this","movementSpeed","lookSpeed","panSpeed","moveForward","moveBackward","viewHalfX","viewHalfY","lat","lon","document","setAttribute","setMoveForward","setMoveBackward","setPanSpeed","handleResize","window","innerWidth","innerHeight","offsetWidth","offsetHeight","onKeyDown","event","code","onKeyUp","moveLeft","moveRight","update","targetPosition","Vector3","delta","actualMoveSpeed","autoForward","translateZ","actualLookSpeed","Math","max","min","phi","MathUtils","degToRad","theta","position","setFromSphericalCoords","add","lookAt","dispose","removeEventListener","_onKeyDown","_onKeyUp","bind","scope","fn","apply","arguments","addEventListener","Controls","props","controlsRef","useRef","gl","useThree","movementContext","useContext","useFrame","state","current","useEffect","args","ref","BirdCamera","birdRef","setDefaultCamera","useState","cameraNode","setCameraNode","cameraRef","useCallback","node","updateMatrixWorld","rotation","color","intensity","distance","decay","castShadow","Lightbulb","emissive","Color","emissiveIntensity","World","cuboidMaterialNode","setCuboidMaterialNode","cuboidGeometryNode","setCuboidGeometryNode","cuboidMaterial","cuboidGeometry","cuboids","useMemo","Array","numCuboids","map","e","i","random","scale","material","geometry","receiveShadow","attach","PI","flatShading","CanvasContent","shadowMap","enabled","type","PCFSoftShadowMap","ThreeCanvas","Provider","value","GlobalStyle","createGlobalStyle","MovementContextActions","setIsMovingForward","setIsMovingBackward","setIsTurningLeft","setIsTurningRight","MovementContextProvider","movementContextActions","children","ButtonSize","css","ButtonMixin","isActive","arrowWhite","arrowWhitePressed","StyledButtonUp","styled","div","StyledButtonLeft","StyledButtonRight","StyledButtonDown","StyledRoot","StyledGrid","CameraControlElements","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7461df85.chunk.js","sourcesContent":["import React from 'react';\n\nexport interface MovementContextType {\n    isMovingForward: boolean;\n    isMovingBackward: boolean;\n    isTurningRight: boolean;\n    isTurningLeft: boolean;\n}\n\nexport const MovementContext = React.createContext<MovementContextType>({\n    isMovingForward: false,\n    isMovingBackward: false,\n    isTurningRight: false,\n    isTurningLeft: false,\n});\n\nexport default MovementContext;\n","import React, {MutableRefObject, useContext, useEffect, useRef} from 'react'\nimport {extend, useFrame, useThree} from 'react-three-fiber'\nimport {BirdControls} from \"../birdControls/birdControls\";\nimport {Object3D} from \"three/src/core/Object3D\";\nimport {BirdControlsType} from \"../birdControls/birdControlsType\";\nimport MovementContext from \"../contexts/movement-context\";\n\nextend({ BirdControls });\n\nexport interface ControlsProps {\n    object: MutableRefObject<Object3D | null>;\n}\n\nfunction Controls(props: ControlsProps) {\n    const controlsRef = useRef<BirdControlsType>(null)\n    const { gl } = useThree();\n\n    const movementContext = useContext(MovementContext);\n\n    useFrame((state, delta) => {\n        if (!controlsRef || !controlsRef.current) {\n            return;\n        }\n\n        controlsRef.current.update(delta);\n    });\n\n    useEffect(() => {\n        if (!controlsRef || !controlsRef.current) {\n            return;\n        }\n\n        controlsRef.current.setMoveForward(movementContext.isMovingForward)\n    }, [movementContext.isMovingForward]);\n\n    useEffect(() => {\n        if (!controlsRef || !controlsRef.current) {\n            return;\n        }\n\n        controlsRef.current.setMoveBackward(movementContext.isMovingBackward)\n    }, [movementContext.isMovingBackward]);\n\n    useEffect(() => {\n        if (!controlsRef || !controlsRef.current) {\n            return;\n        }\n\n        movementContext.isTurningRight ? controlsRef.current.setPanSpeed(500) : controlsRef.current.setPanSpeed(0)\n    }, [movementContext.isTurningRight]);\n\n    useEffect(() => {\n        if (!controlsRef || !controlsRef.current) {\n            return;\n        }\n\n        movementContext.isTurningLeft ? controlsRef.current.setPanSpeed(-500) : controlsRef.current.setPanSpeed(0)\n    }, [movementContext.isTurningLeft]);\n\n\n    if (!props.object || !props.object.current) {\n        return <></>\n    }\n\n    return (\n        <birdControls\n            args={[props.object.current, gl.domElement]}\n            ref={controlsRef}\n            movementSpeed={500}\n            lookSpeed={0.1}\n        />\n    )\n}\n\nexport default Controls\n","import {\n    MathUtils,\n    Vector3\n} from 'three';\n\n// based on https://github.com/mrdoob/three.js/blob/dev/examples/jsm/controls/FirstPersonControls.js\n\nconst BirdControls = function (object, domElement ) {\n    // set by constructor (property 'arg')\n    this.object = object;\n    this.domElement = domElement;\n\n    // set by property\n    this.movementSpeed = 1.0;\n    this.lookSpeed = 0.005;\n\n    // internals\n    this.panSpeed = 0;\n\n    this.moveForward = false;\n    this.moveBackward = false;\n\n    this.viewHalfX = 0;\n    this.viewHalfY = 0;\n\n    var lat = 0;\n    var lon = 0;\n\n    if ( this.domElement !== document ) {\n        this.domElement.setAttribute( 'tabindex', - 1 );\n    }\n\n    this.setMoveForward = function(isMovingForward) {\n        this.moveForward = isMovingForward;\n    }\n\n    this.setMoveBackward = function(isMovingBackward) {\n        this.moveBackward = isMovingBackward;\n    }\n\n    this.setPanSpeed = function(panSpeed) {\n        this.panSpeed = panSpeed;\n    }\n\n\n    this.handleResize = function () {\n        if ( this.domElement === document ) {\n            this.viewHalfX = window.innerWidth / 2;\n            this.viewHalfY = window.innerHeight / 2;\n        } else {\n            this.viewHalfX = this.domElement.offsetWidth / 2;\n            this.viewHalfY = this.domElement.offsetHeight / 2;\n        }\n    };\n\n    this.onKeyDown = function ( event ) {\n        //event.preventDefault();\n\n        switch ( event.code ) {\n            case 'ArrowUp':\n            case 'KeyW': this.moveForward = true; break;\n\n            case 'ArrowLeft':\n            case 'KeyA':\n                this.panSpeed = -800;\n                break;\n\n            case 'ArrowDown':\n            case 'KeyS': this.moveBackward = true; break;\n\n            case 'ArrowRight':\n            case 'KeyD':\n                this.panSpeed = 800;\n                break;\n            default:\n                break;\n        }\n    };\n\n    this.onKeyUp = function ( event ) {\n        this.panSpeed = 0;\n\n        switch ( event.code ) {\n            case 'ArrowUp':\n            case 'KeyW': this.moveForward = false; break;\n\n            case 'ArrowLeft':\n            case 'KeyA': this.moveLeft = false; break;\n\n            case 'ArrowDown':\n            case 'KeyS': this.moveBackward = false; break;\n\n            case 'ArrowRight':\n            case 'KeyD': this.moveRight = false; break;\n\n            default:\n                break;\n        }\n    };\n\n    this.update = function () {\n\n        var targetPosition = new Vector3();\n\n        return function update( delta ) {\n            var actualMoveSpeed = delta * this.movementSpeed;\n\n            if ( this.moveForward || ( this.autoForward && ! this.moveBackward ) ) {\n                this.object.translateZ( - ( actualMoveSpeed  ) );\n            }\n            if ( this.moveBackward ) this.object.translateZ( actualMoveSpeed );\n\n            var actualLookSpeed = delta * this.lookSpeed;\n\n            lon -= this.panSpeed * actualLookSpeed;\n            lat = Math.max( - 85, Math.min( 85, lat ) );\n            var phi = MathUtils.degToRad( 90 - lat );\n            var theta = MathUtils.degToRad( lon );\n            var position = this.object.position;\n            targetPosition.setFromSphericalCoords( 1, phi, theta ).add( position );\n\n            this.object.lookAt( targetPosition );\n        };\n    }();\n\n    this.dispose = function () {\n        window.removeEventListener( 'keydown', _onKeyDown );\n        window.removeEventListener( 'keyup', _onKeyUp );\n    };\n\n    var _onKeyDown = bind( this, this.onKeyDown );\n    var _onKeyUp = bind( this, this.onKeyUp );\n\n    window.addEventListener( 'keydown', _onKeyDown );\n    window.addEventListener( 'keyup', _onKeyUp );\n\n    function bind( scope, fn ) {\n        return function () {\n            fn.apply( scope, arguments );\n        };\n    }\n\n    this.handleResize();\n};\n\nexport { BirdControls };","import React, {useCallback, useRef, useState} from \"react\";\nimport {useFrame, useThree, Vector3} from \"react-three-fiber\";\nimport Controls from \"./controls\";\nimport {Group, PerspectiveCamera} from \"three\";\nimport Lightbulb from \"./lightbulb\";\n\nexport interface CameraProps {\n    position: Vector3;\n}\n\nexport default function BirdCamera(props: CameraProps) {\n    const birdRef= useRef<Group>(null);\n    const { setDefaultCamera } = useThree();\n    const [cameraNode, setCameraNode] = useState<PerspectiveCamera>();\n\n    const cameraRef = useCallback((node) => {\n        if (node === null) {\n            return;\n        }\n\n        setDefaultCamera(node);\n        // node.rotateX(-0.3);\n        setCameraNode(node);\n    }, [setDefaultCamera]);\n\n    useFrame(() => {\n        if (!cameraNode) {\n            return;\n        }\n\n        cameraNode.updateMatrixWorld();\n    });\n\n    return (\n        <>\n            <group ref={birdRef} position={props.position}>\n                <group rotation={[-0.3,0, 0]}>\n                    <perspectiveCamera ref={cameraRef}  />\n                </group>\n\n                <pointLight\n                    color={\"0xfffff5\"}\n                    intensity={0.2}\n                    distance={500}\n                    decay={2}\n                    castShadow={true}\n                    position={[-100,0,0]}\n                />\n                <pointLight\n                    color={\"0xfffff5\"}\n                    intensity={0.2}\n                    distance={500}\n                    decay={2}\n                    castShadow={true}\n                    position={[100,0,0]}\n                />\n            </group>\n\n\n            <Controls object={birdRef}/>\n        </>\n    )\n\n}","import React, {useEffect, useRef, useState} from \"react\";\nimport {RectAreaLightUniformsLib} from \"three/examples/jsm/lights/RectAreaLightUniformsLib\";\nimport {useThree} from \"react-three-fiber\";\nimport {RectAreaLightHelper} from \"three/examples/jsm/helpers/RectAreaLightHelper\";\nimport {Color, Light, RectAreaLight} from \"three\";\nimport {Vector3} from \"three/src/math/Vector3\";\n\n\nexport interface IlluminatedMeshProps {\n    position?: Vector3;\n}\n\nexport default function Lightbulb(props: IlluminatedMeshProps) {\n    return (\n        <pointLight\n            color={\"0xffffff\"}\n            intensity={1}\n            distance={500}\n            decay={2}\n            position={props.position}\n            castShadow={true}\n        >\n            <mesh>\n                <meshStandardMaterial\n                    // args={[{emissive: \"0xffffee\", emissiveIntensity: 10, color: \"0x000000\"}]}\n                    emissive={new Color(\"#ffffee\")}\n                    emissiveIntensity={1}\n                    color={\"#000000\"}\n\n                />\n                <sphereGeometry args={[10, 16, 8]}/>\n            </mesh>\n        </pointLight>\n    );\n}","import React, {useCallback, useEffect, useMemo, useState} from \"react\";\nimport {BoxBufferGeometry, MeshStandardMaterial, PCFSoftShadowMap} from \"three\";\nimport {useThree} from \"react-three-fiber\";\nimport Lightbulb from \"./lightbulb\";\nimport {Vector3} from \"three/src/math/Vector3\";\n\nexport interface WorldProps {\n    numCuboids: number;\n}\n\nexport default function World(props: WorldProps) {\n    const [cuboidMaterialNode, setCuboidMaterialNode] = useState<MeshStandardMaterial>();\n    const [cuboidGeometryNode, setCuboidGeometryNode] = useState<BoxBufferGeometry>();\n\n    const {gl} = useThree();\n\n    // useEffect(() => {\n    //     gl.shadowMap.enabled = true;\n    //     gl.shadowMap.type = PCFSoftShadowMap;\n    // }, [gl]);\n\n    const cuboidMaterial = useCallback(node => {\n        if (node === null) {\n            return;\n        }\n\n        setCuboidMaterialNode(node);\n    }, []);\n\n    const cuboidGeometry = useCallback(node => {\n        if (node === null) {\n            return;\n        }\n\n        setCuboidGeometryNode(node);\n    }, []);\n\n    const cuboids = useMemo(() => {\n        if (!cuboidGeometryNode || !cuboidGeometryNode) {\n            return;\n        }\n\n        return (\n            <>\n                {[...Array(props.numCuboids)].map((e, i) =>\n                    <mesh\n                        key={i}\n                        position={[Math.random() * 1600 - 800, 0, Math.random() * 1600 - 800]}\n                        scale={[20, Math.random() * 160 + 100, 20]}\n                        material={cuboidMaterialNode}\n                        geometry={cuboidGeometryNode}\n                        castShadow={true}\n                        receiveShadow={true}\n                    />\n                )}\n            </>\n        )\n    }, [cuboidGeometryNode, cuboidMaterialNode, props.numCuboids]);\n\n\n    return (\n        <>\n            {/*<fog attach=\"fog\" args={['#53FAEB', 0.002, 1000]} />*/}\n            {/*<directionalLight position={[100, 100, 100]} color=\"ddred\" castShadow={true}/>*/}\n            {/*<directionalLight position={[-1, -1, -1]} color=\"#ffdw738\" castShadow={true} />*/}\n            <ambientLight color=\"white\" intensity={0.001}/>\n\n            <meshStandardMaterial\n                ref={cuboidMaterial}\n                attach=\"material\"\n                color=\"white\"\n            />\n            <boxBufferGeometry\n                ref={cuboidGeometry}\n                attach=\"geometry\"\n                args={[1, 1, 1]} /*ref={ref => ref && ref.translate(0, 0.5, 0)}*/ />\n\n            {cuboids}\n\n            <Lightbulb position={new Vector3(0, 200, 0)}/>\n\n            <mesh position={[0, 0, 0]} rotation={[-Math.PI / 2, 0, 0]} receiveShadow={true}>\n                <planeBufferGeometry\n                    attach=\"geometry\"\n                    args={[1800, 1800]}\n                />\n                <meshStandardMaterial\n                    attach=\"material\"\n                    color=\"white\"\n                    flatShading={true}\n                />\n            </mesh>\n        </>\n    );\n}","import React, {useEffect} from \"react\";\nimport BirdCamera from \"./bird-camera\";\nimport World from \"./world\";\nimport {Canvas, useThree} from \"react-three-fiber\";\nimport {PCFSoftShadowMap} from \"three\";\nimport Lightbulb from \"./lightbulb\";\nimport {Vector3} from \"three/src/math/Vector3\";\n\nexport default function CanvasContent() {\n    const {gl} = useThree();\n\n    useEffect(() => {\n        gl.shadowMap.enabled = true;\n        gl.shadowMap.type = PCFSoftShadowMap;\n    }, [gl]);\n\n    return (\n        <>\n            <BirdCamera position={[0, 200, 1000]}/>\n\n            <World numCuboids={400}/>\n        </>\n    );\n}","import React, {useContext} from \"react\";\nimport {Canvas, useThree} from \"react-three-fiber\";\nimport MovementContext from \"../contexts/movement-context\";\nimport CanvasContent from \"./canvas-content\";\n\n\nexport default function ThreeCanvas() {\n    const movementContext = useContext(MovementContext);\n\n    return (\n        <Canvas shadowMap={true}>\n            <MovementContext.Provider value={movementContext}>\n                <CanvasContent/>\n            </MovementContext.Provider>\n        </Canvas>\n    );\n}","import {createGlobalStyle} from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    html,\n    body,\n    #root {\n      width: 100%;\n      height: 100%;\n      margin: 0;\n      padding: 0;\n    }\n\n    html {\n      box-sizing: border-box;\n    }\n    *, *:before, *:after {\n      box-sizing: inherit;\n    }\n`;\n\nexport default GlobalStyle","import React from 'react';\n\nexport interface MovementContextActionsType {\n    setIsMovingForward: (isMovingForward: boolean) => void;\n    setIsMovingBackward: (isMovingBackward: boolean) => void;\n    setIsTurningLeft: (isTurningLeft: boolean) => void;\n    setIsTurningRight: (isTurningRight: boolean) => void;\n}\n\nexport const MovementContextActions = React.createContext<MovementContextActionsType>({\n    setIsMovingForward: () => undefined,\n    setIsMovingBackward: () => undefined,\n    setIsTurningLeft: () => undefined,\n    setIsTurningRight: () => undefined,\n});\n\nexport default MovementContextActions;\n","import {useMemo, useState} from \"react\";\nimport MovementContext from \"../movement-context\";\nimport MovementContextActions, {MovementContextActionsType} from \"../movement-context-actions\";\n\nexport interface MovementContextProviderProps {\n    children: React.ReactNode;\n}\n\nexport default function MovementContextProvider(props:MovementContextProviderProps) {\n    const [isMovingForward, setIsMovingForward] = useState(false);\n    const [isMovingBackward, setIsMovingBackward] = useState(false);\n    const [isTurningLeft, setIsTurningLeft] = useState(false);\n    const [isTurningRight, setIsTurningRight] = useState(false);\n\n    const movementContextActions: MovementContextActionsType = useMemo(() => {\n       return {\n           setIsMovingForward,\n           setIsMovingBackward,\n           setIsTurningLeft,\n           setIsTurningRight,\n       }\n    }, []);\n\n    return (\n        <MovementContext.Provider value={{isMovingForward, isMovingBackward, isTurningLeft, isTurningRight}}>\n            <MovementContextActions.Provider value={movementContextActions}>\n                {props.children}\n            </MovementContextActions.Provider>\n        </MovementContext.Provider>\n    )\n}","export default __webpack_public_path__ + \"static/media/arrow-white.fb6e3d97.svg\";","export default __webpack_public_path__ + \"static/media/arrow-white-pressed.acc87111.svg\";","import React, {useContext} from \"react\";\nimport MovementContextActions from \"../contexts/movement-context-actions\";\nimport styled, {css} from \"styled-components\";\nimport arrow from '../images/arrow.svg';\n\nimport arrowWhite from '../images/arrow-white.svg';\nimport arrowWhitePressed from '../images/arrow-white-pressed.svg';\nimport MovementContext from \"../contexts/movement-context\";\n\nconst ButtonSize = css`50px`;\n\nconst ButtonMixin = (isActive:boolean) => css`\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  cursor: pointer;\n\n  background-image: url(${arrowWhite});\n\n  ${isActive && css`\n      background-image: url(${arrowWhitePressed});\n  `}\n  \n  @media (min-width: 768px) {\n    background-image: url(${arrowWhite});\n\n    ${isActive && css`\n      background-image: url(${arrowWhitePressed});\n    `}\n  }\n`\n\nconst StyledButtonUp = styled.div<{isActive: boolean}>`\n  grid-row: 1;\n  grid-column: 2;\n  ${props => ButtonMixin(props.isActive)};\n`\n\nconst StyledButtonLeft = styled.div<{isActive: boolean}>`\n  grid-row: 2;\n  grid-column: 1;\n  transform: rotate(-90deg);\n  ${props => ButtonMixin(props.isActive)};\n`\n\nconst StyledButtonRight = styled.div<{isActive: boolean}>`\n  grid-row: 2;\n  grid-column: 3;\n  transform: rotate(90deg);\n  ${props => ButtonMixin(props.isActive)};\n`\n\nconst StyledButtonDown = styled.div<{isActive: boolean}>`\n  grid-row: 3;\n  grid-column: 2;\n  transform: rotate(180deg);\n  ${props => ButtonMixin(props.isActive)};\n`\n\nconst StyledRoot = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  position: absolute;\n  \n  bottom: 0;\n  padding-bottom: calc(${ButtonSize} / 2);\n  padding-right: calc(${ButtonSize} / 2);\n  justify-content: flex-end;\n  \n  @media(min-width: 768px) {\n    justify-content: center;\n    bottom: 10%;   \n    right: unset;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n`\n\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, ${ButtonSize});\n  grid-template-rows: repeat(3, ${ButtonSize});\n  user-select: none;\n`\n\nexport default function CameraControlElements() {\n    const movementContextActions = useContext(MovementContextActions);\n    const movementContext = useContext(MovementContext);\n\n    return (\n        <StyledRoot>\n            <StyledGrid>\n                <StyledButtonUp\n                    isActive={movementContext.isMovingForward}\n                    onMouseDown={() => movementContextActions.setIsMovingForward(true)}\n                    onTouchStart={() => movementContextActions.setIsMovingForward(true)}\n                    onMouseUp={() => movementContextActions.setIsMovingForward(false)}\n                    onTouchEnd={() => movementContextActions.setIsMovingForward(false)}\n                />\n\n                <StyledButtonDown\n                    isActive={movementContext.isMovingBackward}\n                    onMouseDown={() => movementContextActions.setIsMovingBackward(true)}\n                    onTouchStart={() => movementContextActions.setIsMovingBackward(true)}\n                    onMouseUp={() => movementContextActions.setIsMovingBackward(false)}\n                    onTouchEnd={() => movementContextActions.setIsMovingBackward(false)}\n                />\n\n                <StyledButtonLeft\n                    isActive={movementContext.isTurningLeft}\n                    onMouseDown={() => movementContextActions.setIsTurningLeft(true)}\n                    onTouchStart={() => movementContextActions.setIsTurningLeft(true)}\n                    onMouseUp={() => movementContextActions.setIsTurningLeft(false)}\n                    onTouchEnd={() => movementContextActions.setIsTurningLeft(false)}\n                />\n\n                <StyledButtonRight\n                    isActive={movementContext.isTurningRight}\n                    onMouseDown={() => movementContextActions.setIsTurningRight(true)}\n                    onTouchStart={() => movementContextActions.setIsTurningRight(true)}\n                    onMouseUp={() => movementContextActions.setIsTurningRight(false)}\n                    onTouchEnd={() => movementContextActions.setIsTurningRight(false)}\n                />\n            </StyledGrid>\n        </StyledRoot>\n    );\n}","import React from 'react'\nimport styled from \"styled-components\";\nimport ThreeCanvas from \"./components/three-canvas\";\nimport GlobalStyle from \"./global-style\";\nimport MovementContextProvider from \"./contexts/providers/movement-context-provider\";\nimport CameraControlElements from \"./components/camera-control-elements\";\n\n\nconst StyledRoot = styled.div`\n  //background: #ff6161;\n  //background: #53FAEB;\n  background-color: black;\n  width: 100%;\n  height: 100%;\n  position: relative;\n`\n\nfunction App() {\n  return (\n      <StyledRoot>\n          <GlobalStyle/>\n\n          <MovementContextProvider>\n            <ThreeCanvas/>\n            <CameraControlElements/>\n          </MovementContextProvider>\n      </StyledRoot>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {ReactThreeFiber} from 'react-three-fiber'\nimport {MapControls, OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\nimport {FirstPersonControls} from \"three/examples/jsm/controls/FirstPersonControls\";\nimport {FlyControls} from \"three/examples/jsm/controls/FlyControls\";\nimport {BirdControlsType} from \"./birdControls/birdControlsType\";\n\ndeclare global {\n    namespace JSX {\n        interface IntrinsicElements {\n            mapControls: ReactThreeFiber.Object3DNode<MapControls, typeof MapControls>,\n            firstPersonControls: ReactThreeFiber.Object3DNode<FirstPersonControls, typeof FirstPersonControls>,\n            flyControls: ReactThreeFiber.Object3DNode<FlyControls, typeof FlyControls>,\n            orbitControls: ReactThreeFiber.Object3DNode<OrbitControls, typeof OrbitControls>,\n            birdControls: ReactThreeFiber.Object3DNode<BirdControlsType, typeof BirdControlsType>,\n        }\n    }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}